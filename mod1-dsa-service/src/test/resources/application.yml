spring:
  kafka:
    bootstrap-servers: ${embedded.kafka.brokerList}
    producer:
      bootstrap.servers: ${embedded.kafka.brokerList}
#     properties:
#       ssl.endpoint.identification.algorithm:
#       security.protocol: SASL_PLAINTEXT
#       sasl.mechanism: PLAIN
# #      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required \
# #       username="${embedded.kafka.saslPlaintext.user}" \
# #       password="${embedded.kafka.saslPlaintext.password}";
#     producer:
#       retries: 0
#       acks: all
#       key-serializer: org.apache.kafka.common.serialization.StringSerializer
#       value-serializer: org.apache.kafka.common.serialization.StringSerializer
#     consumer:
#       auto-offset-reset: earliest
#       group-id: yggdrasill-group
#       key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#       value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

app:
  kafka:
    producer:
      topic: embedded-test-topic
    consumer:
      topic: embedded-test-topic

# monitor:
#   kafka:
#     bootstrap:
#       config: "PLAINTEXT://localhost:9085"
#     consumer:
#       group-id: "group-yggdrasill"

logging:
  level:
    root: INFO
